<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8"/><meta name="viewport" content="width=device-width,initial-scale=1"/><title>Skrunks Calculator Web Suite</title>
<style>body{font-family:Arial,sans-serif;max-width:800px;margin:0 auto;padding:0 10px;background:#fff;color:#000;line-height:1.6}.nav-bar{display:flex;justify-content:center;background:#007bff;padding:5px 0;margin-bottom:15px;border-radius:0 0 8px 8px}.nav-button{background:transparent;color:#fff;border:none;padding:5px 15px;margin:0 3px;font-size:14px;cursor:pointer;border-radius:4px;transition:background-color .3s}.multiline-nav-button{line-height:1.2;padding-top:2px;padding-bottom:2px}.small-text{font-size:12px;display:block}.nav-button:hover{background:rgba(255,255,255,.2)}.nav-button.active{background:rgba(255,255,255,.3);font-weight:700}h2,h3{text-align:center;color:#007bff}fieldset{margin-bottom:10px;border:1px solid #ccc;padding:10px;border-radius:5px}button{margin:5px;padding:8px 12px;font-size:16px;background:#007bff;color:#fff;border:none;border-radius:5px;cursor:pointer}button:hover{background:#0056b3}input[type=number]{padding:8px;font-size:16px;border:1px solid #ccc;border-radius:5px;width:100%;box-sizing:border-box}.grid{width:100%;border-collapse:collapse;margin-bottom:10px;overflow-x:auto;display:block}.grid th,.grid td{border:1px solid #ddd;padding:8px;text-align:center}.grid th{background:#f2f2f2}#resultOutput{background:#f9f9f9;border:1px solid #ccc;padding:10px;white-space:pre-wrap;height:150px;overflow:auto;border-radius:5px}.tcr-container{background:#fff;padding:2em;border-radius:10px;box-shadow:0 0 10px rgba(0,0,0,.1);max-width:500px;margin:0 auto;text-align:center}.saved-calculations{margin-top:20px;padding:10px;background:#e9ecef;border-radius:5px;text-align:left}.delete-btn{color:#777;cursor:pointer;margin-left:10px;font-weight:700}.delete-btn:hover{color:red}.module{display:none}.module.active{display:block}.submission-form{background:#e9ecef;padding:20px;border-radius:10px;margin-bottom:20px;max-width:500px;margin:0 auto}.submission-form input,.submission-form select,.submission-form textarea{width:100%;margin-bottom:10px;padding:8px;font-size:16px;border:1px solid #ccc;border-radius:5px;box-sizing:border-box}.image-repo-controls{display:flex;justify-content:space-between;align-items:center;margin-bottom:20px;padding:10px;background:#f2f2f2;border-radius:5px}.filter-container{display:flex;align-items:center}.filter-container label{margin-right:10px}#dimensionFilter{padding:8px;border-radius:5px;border:1px solid #ccc}.image-grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(200px,1fr));gap:15px;padding:10px}.image-card{border:1px solid #ddd;border-radius:5px;overflow:hidden;transition:transform .3s;display:flex;flex-direction:column;height:fit-content}.image-card:hover{transform:scale(1.03);box-shadow:0 4px 8px rgba(0,0,0,.1)}.image-card img{width:100%;height:auto;display:block;object-fit:contain}.image-info{padding:10px;font-size:14px;background:#f9f9f9}.download-btn{margin:0 10px 10px;padding:6px 10px;background:#007bff;color:#fff;border:none;border-radius:4px;cursor:pointer;font-size:14px;transition:background-color .3s}.download-btn:hover{background:#0056b3}.scroll-to-top{position:fixed;bottom:20px;right:30px;z-index:99;width:40px;height:40px;background:#007bff;color:#fff;border:none;border-radius:50%;cursor:pointer;opacity:0;transition:opacity .3s,background-color .3s;display:flex;justify-content:center;align-items:center;box-shadow:0 2px 5px rgba(0,0,0,.3);pointer-events:none}.scroll-to-top.visible{opacity:.8;pointer-events:auto}.scroll-to-top:hover{opacity:1;background:#0056b3}.scroll-to-top::after{content:"^";font-size:30px;font-weight:700;line-height:.75;position:relative;top:4px}body.dark-mode{background:#121212;color:#e0e0e0}body.dark-mode .warning,body.dark-mode h2,body.dark-mode h3{color:#66b2ff}body.dark-mode .nav-bar{background:#0056b3}body.dark-mode .grid th{background:#1e1e1e}body.dark-mode .grid,body.dark-mode .grid th,body.dark-mode .grid td{border:1px solid #333}body.dark-mode #resultOutput{background:#1e1e1e;border:1px solid #444}body.dark-mode input[type=number],body.dark-mode input[type=text],body.dark-mode input[type=date],body.dark-mode select,body.dark-mode textarea{border:1px solid #444;background:#333;color:#e0e0e0}body.dark-mode input[type=number][readonly]{background:#2a2a2a}body.dark-mode button{background:#0056b3}body.dark-mode button:hover{background:#003d80}body.dark-mode .tcr-container{background:#2c2c2c;box-shadow:0 0 10px rgba(0,0,0,.5)}body.dark-mode .saved-calculations{background:#333}body.dark-mode .delete-btn{color:#bbb}body.dark-mode .submission-form{background:#2c2c2c}body.dark-mode .image-repo-controls{background:#2c2c2c}body.dark-mode #dimensionFilter{background:#333;color:#e0e0e0;border-color:#444}body.dark-mode .image-card{border-color:#444}body.dark-mode .image-card:hover{box-shadow:0 4px 8px rgba(0,0,0,.5)}body.dark-mode .image-info{background:#1e1e1e}body.dark-mode .download-btn{background:#0056b3}body.dark-mode .download-btn:hover{background:#003d80}body.dark-mode .scroll-to-top{background:#0056b3}body.dark-mode .scroll-to-top:hover{background:#003d80}@media (max-width:600px){body{font-size:14px}button{font-size:14px;padding:6px 10px}input[type=number]{font-size:14px}.grid th,.grid td{padding:6px}fieldset{padding:8px}.nav-button{padding:4px 10px;font-size:13px}}</style>
</head>
<body>
<div class="nav-bar"><button class="nav-button" id="tfrNavBtn">Skrunks Easy TFR Curve</button><button class="nav-button active" id="tcrNavBtn">Skrunks Easy TCR Burnoff</button><button class="nav-button multiline-nav-button" id="submitNavBtn">Submit TFR<br><span class="small-text">(Show Skrunk your curves)</span></button><button class="nav-button" id="imageRepoNavBtn">Skrunk Image Repo</button><button class="nav-button" id="darkModeToggle">🌙</button></div>
<div id="tfrModule" class="module">
<h2>Skrunks Web TFR Calc</h2>
<div style="text-align:center;margin-bottom:10px;"><button id="tfrGuideButton">TFR Guide</button></div>
<fieldset><legend>Curve Type</legend><label><input type="radio" name="curveType" value="7pt" checked> 7‑Point Curve</label> <label><input type="radio" name="curveType" value="8pt"> 8‑Point Curve</label> <label><input type="radio" name="curveType" value="tsm"> TSM Fix Mode</label> <label><input type="radio" name="curveType" value="auto"> Auto TFR Clean</label></fieldset>
<div id="extrapolateContainer" style="text-align:center;margin-bottom:10px;"><label><input type="checkbox" id="extrapolateCheck"> Extrapolate 800°F value</label></div>
<div style="text-align:center;margin-bottom:10px;"><button id="tempUnitToggle">°F / °C</button> <button id="importButton">Import CSV</button> <button id="exportButton">Export CSV</button> <input type="file" id="csvFileInput" accept=".csv" style="display:none;"></div>
<div style="overflow-x:auto;"><table class="grid" id="gridContainer"></table></div>
<div style="text-align:center;margin-bottom:10px;"><button id="calcButton">Calculate TFR</button></div>
<h3>Results:</h3>
<pre id="resultOutput"></pre>
</div>
<div id="tcrModule" class="module active">
<div class="tcr-container">
<h2>Tcr burnoff calc</h2>
<p>Enter your cold resistance (in ohms) below. This calculator assumes that at 600°F your device's resistance will be 0.79 Ω as required for burnoffs.</p>
<label for="coldRes">Cold Resistance (Ω): </label><input type="number" id="coldRes" step="any">
<button id="tcrCalcButton">Calculate</button>
<p class="warning"><strong>Warning:</strong> This tool performs standardized math for the temperature coefficient of resistance and then subtracts 3. While this should be accurate for all devices, it may not be accurate for yours. As such, Skrunk is not responsible for any damaged cups or mods that may occur due to the use of this calculator.</p>
<h3>Result</h3>
<p id="tcrResult"></p>
<h3>Saved Calculations</h3>
<div id="savedCalculations" class="saved-calculations"></div>
</div>
</div>
<div id="submitModule" class="module">
<div class="submission-form">
<h2>Submit Your TFR Curve</h2>
<iframe src="https://docs.google.com/forms/d/e/1FAIpQLScSHdM6HtYnTjNJg4ZMBefj7amE1tOi5I1WmrxH22attDVZtw/viewform?embedded=true" scrolling="no" width="499" height="1299" frameborder="0" marginheight="0" marginwidth="0">Loading…</iframe>
</div>
</div>
<div id="imageRepoModule" class="module">
<h2>Skrunk Image Repository</h2>
<div class="image-repo-controls">
<div class="filter-container"><label for="dimensionFilter">Filter by dimensions:</label><select id="dimensionFilter"><option value="all">All Images</option></select></div>
<button id="refreshImagesBtn">Refresh Images</button>
</div>
<div id="imageContainer" class="image-grid"><p id="loadingImages">Loading images...</p></div>
<button id="scrollToTopBtn" class="scroll-to-top" title="Go to top"></button>
</div>
<script>
const temperatureSets={'7pt':[70,200,300,400,500,570,800],'8pt':[-40,70,200,300,400,500,570,800],'tsm':[-40,70,200,220,300,500,570,800],'auto':[70,200,300,400,500,600,800]};
let currentType='7pt',currentTemperatures=temperatureSets[currentType],tempInputs={},resInputs={},calculatedCoefficients=[],isCelsius=!1,cachedImages=[];
function fahrenheitToCelsius(e){return Math.round((e-32)*5/9)}
function celsiusToFahrenheit(e){return Math.round(e*9/5+32)}
function toggleTemperatureUnit(){const e={};currentTemperatures.forEach(t=>{resInputs[t]&&(e[t]=resInputs[t].value)}),isCelsius=!isCelsius,updateGrid(e)}
function updateGrid(e=null){tempInputs={},resInputs={};const t=document.getElementById("gridContainer");t.innerHTML="";const n=document.createElement("tr"),r=document.createElement("th");r.innerText=`Temperature (${isCelsius?"°C":"°F"})`;const a=document.createElement("th");a.innerText="Resistance Value",n.appendChild(r),n.appendChild(a),t.appendChild(n),currentTemperatures.forEach(n=>{const r=document.createElement("tr"),a=document.createElement("td"),s=isCelsius?fahrenheitToCelsius(n):n;if("tsm"===currentType)if(n===-40||n===70||n===200||n===220)a.innerText=s,a.dataset.fahrenheit=n;else{const e=document.createElement("input");e.type="number",e.value=s,e.step="1",e.dataset.fahrenheit=n,a.appendChild(e),tempInputs[n]=e}else if("auto"===currentType)a.innerText=s,a.dataset.fahrenheit=n;else{const e=document.createElement("input");e.type="number",e.value=s,e.step="1",e.dataset.fahrenheit=n,a.appendChild(e),tempInputs[n]=e}r.appendChild(a);const i=document.createElement("td"),o=document.createElement("input");if(o.type="number",o.step="0.001","tsm"===currentType){if(n===-40||n===200&&(o.readOnly=!0,o.style.backgroundColor="#f0f0f0"),n===70)o.addEventListener("input",updateTSMValues)}else if("auto"===currentType)if(n===70)o.addEventListener("input",autoFillValues);else{o.readOnly=!0,o.style.backgroundColor="#f0f0f0"}e&&void 0!==e[n]&&(o.value=e[n]),n===800&&document.getElementById("extrapolateCheck").checked&&(o.readOnly=!0,o.style.backgroundColor="#f0f0f0"),i.appendChild(o),r.appendChild(i),resInputs[n]=o,t.appendChild(r)}),setTimeout(setupExtrapolationListeners,0)}
function displaySavedCalculations(){var e=JSON.parse(localStorage.getItem("calculations"))||[],t=document.getElementById("savedCalculations");t&&(t.innerHTML=e.map((e,t)=>`Cold Resistance: ${e.coldRes} Ω - Required TCR: ${e.tcrFull} <span class="delete-btn" onclick="deleteCalculation(${t})">&times;</span>`).join("<br>"))}
function showModule(e){document.querySelectorAll(".module").forEach(e=>e.classList.remove("active")),document.getElementById(e).classList.add("active")}
function updateNavButtons(e){document.querySelectorAll(".nav-button").forEach(t=>{t.id===e?t.classList.add("active"):t.id!=="darkModeToggle"&&t.classList.remove("active")})}
function applyDarkMode(){const e=localStorage.getItem("darkMode")!=="false";if(e){document.body.classList.add("dark-mode");const t=document.getElementById("darkModeToggle");t&&(t.textContent="🌙")}else{document.body.classList.remove("dark-mode");const t=document.getElementById("darkModeToggle");t&&(t.textContent="☀️")}}
function autoFillValues(){if("auto"!==currentType)return;const e=parseFloat(resInputs[70].value);if(isNaN(e)||e<=0)return;const t=e+.001,n=.79,r=1.2*n;currentTemperatures.forEach(a=>{if(70===a)return;let s;if(a===200)s=t;else if(a===600)s=n;else if(a===800)s=r;else{const e=(a-200)/(600-200),r=Math.pow(e,2);s=t+(n-t)*r}resInputs[a].value=s.toFixed(3)})}
function updateTSMValues(){if("tsm"!==currentType)return;const e=parseFloat(resInputs[70].value);if(isNaN(e)||e<=0)return;const t=.92*e;resInputs[-40].value=t.toFixed(3),resInputs[200].value=(e+.001).toFixed(3)}
function calculateTFR(){if("auto"===currentType?autoFillValues():"tsm"===currentType&&updateTSMValues(),temps=[],currentTemperatures.forEach(e=>{if(tempInputs[e]){let t=parseFloat(tempInputs[e].value);isCelsius&&!isNaN(t)&&(t=celsiusToFahrenheit(t)),temps.push(isNaN(t)?e:t)}else temps.push(e)}),values=[],currentTemperatures.length>0){for(let e=0;e<currentTemperatures.length;e++){const t=parseFloat(resInputs[currentTemperatures[e]].value);if(isNaN(t))return void alert("Please enter all resistance values.");values.push(t)}const e=values["tsm"===currentType?1:0];calculatedCoefficients=[];let t="Temperature (°F), Electrical Resistivity\n";values.forEach((n,r)=>{let a=n/e;if("none"!==document.getElementById("extrapolateContainer").style.display&&document.getElementById("extrapolateCheck").checked&&800===currentTemperatures[r]&&r>1){const t=currentTemperatures[r-2],a=currentTemperatures[r-1],s=values[r-2],i=values[r-1],o=(i-s)/(a-t),c=i-o*a,l=800*o+c;a=l/e}a=parseFloat(a.toFixed(3));let s=temps[r];calculatedCoefficients.push({temp:s,coef:a}),t+=`${s}, ${a.toFixed(3)}\n`}),document.getElementById("resultOutput").innerText=t}}
function importCSV(e){const t=e.trim().split(/\r?\n/);if(t.length<2)return void alert("CSV file does not contain valid data.");const n=[],r=[];for(let e=1;e<t.length;e++){const a=t[e].split(/,|;/);if(a.length>=2){const e=parseFloat(a[0].replace(/"/g,"").trim()),t=parseFloat(a[1].replace(/"/g,"").trim());isNaN(e)||isNaN(t)||(n.push(e),r.push(t))}}if(0===n.length)return void alert("No valid data found in CSV file.");let a="7pt";if(8===n.length)n.includes(220)||n.some(e=>Math.abs(e-220)<1)?a="tsm":a="8pt";else if(7===n.length){n.includes(600)||n.some(e=>Math.abs(e-600)<1)?a="auto":a="7pt"}let s=parseFloat(window.prompt("Enter base resistance value:","1.0"));return isNaN(s)?void alert("Invalid base resistance. Aborting import."):(currentType=a,document.querySelectorAll("input[name='curveType']").forEach(e=>{e.checked=e.value===currentType}),currentTemperatures=[...n],updateGrid(),n.forEach((e,t)=>{resInputs[e]&&(resInputs[e].value=(r[t]*s).toFixed(3)),tempInputs[e]&&(tempInputs[e].value=e)}),"tsm"===currentType&&resInputs[-40]&&resInputs[70]&&!resInputs[-40].value&&(e=parseFloat(resInputs[70].value),isNaN(e)||(resInputs[-40].value=(.92*e).toFixed(3))),void alert(`CSV data imported successfully with base resistance of ${s}.`))}
function findClosestTemperature(e,t){let n=t[0],r=Math.abs(e-n);for(let a=1;a<t.length;a++){const s=Math.abs(e-t[a]);s<r&&(r=s,n=t[a])}return n}
function findBestCurveTypeMatch(e){const t=Object.keys(temperatureSets);let n={curveType:"7pt",mismatches:[],score:Number.MAX_SAFE_INTEGER};return t.forEach(t=>{const r=temperatureSets[t];if(r.length===e.length){const t=[...e].sort((e,t)=>e-t),a=[...r].sort((e,t)=>e-t);let s=[],i=0;for(let e=0;e<t.length;e++){const n=Math.abs(t[e]-a[e]);i+=n,n>3&&s.push({csvTemp:t[e],expectedTemp:a[e]})}(s.length<n.mismatches.length||s.length===n.mismatches.length&&i<n.score)&&(n={curveType:t,mismatches:s,score:i})}}),n}
function exportCSV(){if(!calculatedCoefficients.length)return void alert("Please calculate TFR values first!");let e="Temperature (°F),Electrical Resistivity\n";calculatedCoefficients.forEach(t=>{e+=`${t.temp},${t.coef.toFixed(3)}\n`});const t=new Blob([e],{type:"text/csv;charset=utf-8;"}),n=URL.createObjectURL(t),r=document.createElement("a");r.setAttribute("href",n),r.setAttribute("download","tfrcalc.csv"),document.body.appendChild(r),r.click(),document.body.removeChild(r)}
function calculateTCR(){var e=parseFloat(document.getElementById("coldRes").value);if(isNaN(e)||e<=0)return void(document.getElementById("tcrResult").innerText="Please enter a valid positive number for cold resistance.");var t=(.79/e-1)/600,n=Math.round(2e5*t)-3;document.getElementById("tcrResult").innerText="Required TCR (full number): "+n,saveCalculation(e,n),displaySavedCalculations()}
function saveCalculation(e,t){var n=JSON.parse(localStorage.getItem("calculations"))||[];n.push({coldRes:e,tcrFull:t}),localStorage.setItem("calculations",JSON.stringify(n))}
function deleteCalculation(e){var t=JSON.parse(localStorage.getItem("calculations"))||[];t.splice(e,1),localStorage.setItem("calculations",JSON.stringify(t)),displaySavedCalculations()}
function extrapolate800Value(){if(!document.getElementById("extrapolateCheck").checked)return;const e=currentTemperatures.indexOf(800);if(-1===e||e<2)return;const t=currentTemperatures[e-2],n=currentTemperatures[e-1],r=resInputs[t],a=resInputs[n],s=resInputs[800];if(!r||!a||!s)return;const i=parseFloat(r.value),o=parseFloat(a.value);if(isNaN(i)||isNaN(o))return;const c=(o-i)/(n-t),l=o-c*n,d=800*c+l;s.value=d.toFixed(3),s.readOnly=!0,s.style.backgroundColor="#f0f0f0"}
function setupExtrapolationListeners(){const e=currentTemperatures.indexOf(800);if(e<2)return;const t=currentTemperatures[e-2],n=currentTemperatures[e-1];resInputs[t]&&resInputs[t].addEventListener("input",extrapolate800Value),resInputs[n]&&resInputs[n].addEventListener("input",extrapolate800Value)}
function setupScrollToTopButton(){const e=document.getElementById("scrollToTopBtn");window.addEventListener("scroll",function(){document.getElementById("imageRepoModule").classList.contains("active")&&e.classList[window.pageYOffset>200?"add":"remove"]("visible")}),e.addEventListener("click",()=>window.scrollTo({top:0,behavior:"smooth"}))}
async function fetchImagesFromGitHub(){const e=document.getElementById("loadingImages");e.textContent="Loading images...";try{const t=await fetch("https://api.github.com/repos/alopez5301/AFREPO/contents/images");if(!t.ok)throw new Error(`GitHub API error: ${t.status}`);const n=await t.json(),r=n.filter(e=>/\.(jpg|jpeg|png|bmp)$/i.test(e.name)),a=5,s=[];for(let e=0;e<r.length;e+=a)s.push(r.slice(e,e+a));cachedImages=[];for(const t of s){const n=await Promise.all(t.map(e=>getImageDetails(e)));cachedImages.push(...n),cachedImages.length&&(e.textContent=`Loading images... (${cachedImages.length}/${r.length})`,updateDimensionFilter(cachedImages),displayImages(cachedImages))}}catch(t){e.textContent=`Error loading images: ${t.message}`,console.error("Error fetching images:",t)}}
async function getImageDetails(e){const t=e.download_url,n=new Image,r=await new Promise(e=>{n.onload=()=>e({width:n.width,height:n.height}),n.onerror=()=>e({width:0,height:0}),n.src=t});return{name:e.name,url:t,width:r.width,height:r.height}}
function updateDimensionFilter(e){const t=new Set;e.forEach(e=>t.add(`${e.width}x${e.height}`));const n=document.getElementById("dimensionFilter"),r=n.value;for(;n.options.length>1;)n.remove(1);Array.from(t).sort((e,t)=>{const[n,r]=e.split("x").map(Number),[a,s]=t.split("x").map(Number);return a-n||s-r}).forEach(e=>{const t=document.createElement("option");t.value=t.textContent=e,n.appendChild(t)}),n.value=Array.from(n.options).some(e=>e.value===r)?r:"all"}
function displayImages(e){const t=document.getElementById("imageContainer"),n=document.getElementById("dimensionFilter").value,r=document.getElementById("loadingImages");if(t.innerHTML="",t.appendChild(r),filteredImages=e,"all"!==n){const[t,r]=n.split("x").map(Number);filteredImages=e.filter(e=>e.width===t&&e.height===r)}if(0===filteredImages.length)return void(r.textContent="No images match the selected filter");filteredImages.sort((e,t)=>t.width-e.width||t.height-e.height),r.style.display="none";const a=document.createDocumentFragment(),s=document.createElement("template");s.innerHTML='<div class="image-card" style="height:auto"><img style="width:100%;height:auto;cursor:pointer" loading="lazy"><div class="image-info"></div><button class="download-btn">Download</button></div>',filteredImages.forEach(e=>{const t=s.content.cloneNode(!0).firstElementChild,n=t.querySelector("img");n.src=e.url,n.alt=e.name,n.addEventListener("click",()=>window.open(e.url,"_blank")),t.querySelector(".image-info").textContent=`${e.name} (${e.width}x${e.height})`;const r=t.querySelector(".download-btn");r.addEventListener("click",t=>{t.stopPropagation();const n=document.createElement("a");n.href=e.url,n.download=e.name,document.body.appendChild(n),n.click(),document.body.removeChild(n)}),a.appendChild(t)}),t.appendChild(a)}
document.querySelectorAll("input[name='curveType']").forEach(e=>{e.addEventListener("change",function(){this.checked&&(currentType=this.value,currentTemperatures=temperatureSets[currentType],updateGrid(),document.getElementById("extrapolateContainer").style.display="auto"===currentType?"none":"block",setTimeout(setupExtrapolationListeners,100))})});
document.getElementById("extrapolateCheck").addEventListener("change",function(){const e=resInputs[800];this.checked?(extrapolate800Value(),e&&(e.readOnly=!0,e.style.backgroundColor="#f0f0f0")):e&&(e.readOnly=!1,e.style.backgroundColor="")});
document.getElementById("calcButton").addEventListener("click",calculateTFR);
document.getElementById("exportButton").addEventListener("click",exportCSV);
document.getElementById("importButton").addEventListener("click",()=>document.getElementById("csvFileInput").click());
document.getElementById("csvFileInput").addEventListener("change",function(e){const t=e.target.files[0];if(t){const e=new FileReader;e.onload=e=>importCSV(e.target.result),e.readAsText(t),this.value=""}});
document.getElementById("tcrCalcButton").addEventListener("click",calculateTCR);
document.getElementById("tempUnitToggle").addEventListener("click",toggleTemperatureUnit);
document.getElementById("tfrNavBtn").addEventListener("click",function(){showModule("tfrModule"),updateNavButtons("tfrNavBtn")});
document.getElementById("tcrNavBtn").addEventListener("click",function(){showModule("tcrModule"),updateNavButtons("tcrNavBtn")});
document.getElementById("submitNavBtn").addEventListener("click",function(){showModule("submitModule"),updateNavButtons("submitNavBtn")});
document.getElementById("imageRepoNavBtn").addEventListener("click",function(){showModule("imageRepoModule"),updateNavButtons("imageRepoNavBtn"),0===cachedImages.length&&fetchImagesFromGitHub(),setupScrollToTopButton()});
document.getElementById("darkModeToggle").addEventListener("click",function(){document.body.classList.toggle("dark-mode");const e=document.body.classList.contains("dark-mode");localStorage.setItem("darkMode",e?"true":"false"),this.textContent=e?"🌙":"☀️"});
document.addEventListener("DOMContentLoaded",function(){applyDarkMode(),updateGrid(),displaySavedCalculations(),setupExtrapolationListeners();const e=document.getElementById("tfrGuideButton");e&&e.addEventListener("click",function(){window.open("tfrguide","_blank");});const t=document.getElementById("dimensionFilter");t&&t.addEventListener("change",()=>{cachedImages.length>0&&displayImages(cachedImages)});const n=document.getElementById("refreshImagesBtn");n&&n.addEventListener("click",fetchImagesFromGitHub);const r=document.getElementById("submitDate");r&&(r.value=(new Date).toISOString().split("T")[0]),document.getElementById("imageRepoModule").classList.contains("active")&&setupScrollToTopButton()});
</script>
</body>
</html>
